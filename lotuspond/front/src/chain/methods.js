import code from "./code";

export default {
  [code.account]: [
    "Send",
    "Constructor",
    "PubkeyAddress",
  ],
  [code.init]: [
    "Send",
    "Constructor",
    "Exec",
  ],
  [code.cron]: [
    "Send",
    "Constructor",
    "EpochTick",
  ],
  [code.reward]: [
    "Send",
    "Constructor",
    "AwardBlockReward",
    "WithdrawReward",
  ],
  [code.multisig]: [
    "Send",
    "Constructor",
    "Propose",
    "Approve",
    "Cancel",
    "ClearCompleted",
    "AddSigner",
    "RemoveSigner",
    "SwapSigner",
    "ChangeNumApprovalsThreshold",
  ],
  [code.paych]: [
    "Send",
    "Constructor",
    "UpdateChannelState",
    "Settle",
    "Collect",
  ],
  [code.market]: [
    "Send",
    "Constructor",
    "AddBalance",
    "WithdrawBalance",
    "HandleExpiredDeals",
    "PublishStorageDeals",
    "VerifyDealsOnSectorProveCommit",
    "OnMinerSectorsTerminate",
    "ComputeDataCommitment",
    "GetWeightForDealSet",
  ],
  [code.power]: [
    "Send",
    "Constructor",
    "AddBalance",
    "WithdrawBalance",
    "CreateMiner",
    "DeleteMiner",
    "OnSectorProveCommit",
    "OnSectorTerminate",
    "OnSectorTemporaryFaultEffectiveBegin",
    "OnSectorTemporaryFaultEffectiveEnd",
    "OnSectorModifyWeightDesc",
    "OnMinerWindowedPoStSuccess",
    "OnMinerWindowedPoStFailure",
    "EnrollCronEvent",
    "ReportConsensusFault",
    "OnEpochTickEnd",
  ],
  [code.miner]: [
    "Send",
    "Constructor",
    "ControlAddresses",
    "ChangeWorkerAddress",
    "ChangePeerID",
    "SubmitWindowedPoSt",
    "OnDeleteMiner",
    "PreCommitSector",
    "ProveCommitSector",
    "ExtendSectorExpiration",
    "TerminateSectors",
    "DeclareTemporaryFaults",
    "OnDeferredCronEvent",
  ],
}